#!/src/sh

(cd src && make)
src/gen

clear
echo "command:>  src/punto -c -r data/aleatori03d.dat"
echo "zoom in and out typing 'z' and 'Z'"
echo "increase and decrease the size typing 'i' and 'I'"
echo "'b' show-hide a border box"
echo "rotate with 4,7 for x axe 5,8 for y and 6,9 for z"
echo "type '0' for initial state "
echo "type 'q' to continue"
src/punto -c -r data/aleatori03d.dat > /dev/null

clear
echo "command:>  src/punto -r data/red3d.dat"
echo "The file red3d.dat has four columns, the 3-D coordinates and the size.
Without options punto plot a 3D system with the default size."
echo "type 'q' to continue"
src/punto -r data/red3d.dat > /dev/null

clear
echo "command:>  src/punto data/deathstar.dat"
echo "A 3D sphere formed by particles its plotted. "
#Typing the key 'c' you
#can cut by planes parallels to the screen point of view and look in the
#inside. A fourth column is for the color."
echo "type 'q' to continue"
src/punto -c data/deathstar.dat > /dev/null

clear
echo "command:>  src/punto data/onda.dat"
echo "A 3D wave is plotted."
echo "rotate the x axis typing '7'"
echo "You can start-stop an animation typing
's'. Reverse it typing 'r'. "
echo "type 'q' to continue"
echo "You can change the default size of the particles with the option -s"
src/punto data/onda.dat> /dev/null

echo ""
echo "command:> src/punto -s 4 data/onda.dat"
echo "type 't' to see some trace points of the trayectories"
echo "type 'p' to see the periodic images"
echo "type 'q' to continue"
src/punto -s 4 data/onda.dat > /dev/null

clear
echo "command:>  src/punto -c -r data/fuente.dat"
echo "The file data/fuente.dat is a source of colored particles changing its size."

echo "Type 's' or the left mouse-bottom or the up-arrow for start and stop
the animation.
'space' for one-by-one slide.
left-arrow and right-arrow for change the delay between frames (this delay is
initially set to zero). The down-arrow sets the delay to zero.
'4-9' for rotating the axis. '0' for return for the initial point of
view."
src/punto -c -r data/fuente.dat > /dev/null

#$punto -c -r -s 30 data/fuente.dat




clear
echo "command:> src/punto -c -s 6 data/colors.dat"
echo "The values of the color column must be an integer. There are 64 colors
avalaible. These are the possible colors.
colors.dat is a three columns file. Without the -c option punto
interprets it as a three dimensional data file."
echo ""
echo "If your color column has no integers or you want to display an scalar field
 its possible to plot them using the option -G,
in this case the value are rescaled between the minimum and maximum of the data
values of the first block."

src/punto -c -s 6 data/colors.dat >/dev/null
echo ""

echo "command:> src/punto -s 6 -B -G data/colors.dat"
echo ""
echo "Change the order of the columns with the -z option,"
src/punto -s 6 -B -G data/colors.dat>/dev/null

echo ""
echo "command:>  src/punto -s 6 -G -z 1:2:1 data/colors.dat"
echo "This last command is interpreted as: two dimensional file, column 1
	for x, column 2 for y coordinate and column 1 for the color."
src/punto -s 6 -G -z 1:2:1 data/colors.dat>/dev/null

echo ""
echo "command:>  src/punto -s 6 -G -z 1:2:1 -p 1 data/colors.dat"
echo "change the palette with the -p option, there are four avalaibles."

src/punto -s 6 -G -z 1:2:1 -p 1 data/colors.dat>/dev/null

clear

echo "different types of puntos. option -t"
echo "------------------------------------"
echo "command:>  src/punto -s 6 -G -z 1:2:1 -p 2 -t 0 data/colors.dat"
echo "there are three types of puntos: circles, squares, spheres"
src/punto -s 6 -G -z 1:2:1 -p 2 -t 0 data/colors.dat>/dev/null

echo "command:>  src/punto -s 6 -G -z 1:2:1 -p 1 -t 1 data/colors.dat"
src/punto -s 6 -G -z 1:2:1 -p 1 -t 1 data/colors.dat>/dev/null

echo "command:>  src/punto -s 6 -G -z 1:2:1 -p 3 -t 2 data/colors.dat"
src/punto -s 6 -G -z 1:2:1 -p 3 -t 2 data/colors.dat>/dev/null

clear

echo "plotting vectorial fields"
echo "-------------------------"
echo ""
echo "command:>  src/punto -V data/field2d.dat "

echo "The file field2d.dat has four columns. With the -V option this columns
are interpreted as x and y coordinates and the x and y values of a
vectorial field."
echo ""
echo "Change the size of the field with the -s option,"
src/punto -V data/field2d.dat >/dev/null

echo ""
echo "command:>  src/punto -V -s 40 data/field2d.dat"
src/punto -V -s 40 data/field2d.dat >/dev/null

echo ""
echo "command:>  src/punto -V data/field3d.dat"
echo "The file field3d.dat has six columns and is interpreted as 3D vectorial field."
echo ""
echo "type 'a' to change among arrows, lines or dots."
echo "If the number of columns of your data file is different you always
can choose the columns to be plotted with the option -z."
src/punto -V data/field3d.dat > /dev/null

echo "change the background and foreground colors:"
echo "command:>  src/punto -V -bg white -fg black data/field3d.dat"
src/punto -V  -bg white -fg black data/field3d.dat > /dev/null


clear
echo "I hope this program will be useful for you."
echo "Send all comments, bugs and suggestions to,"
echo "Mariano Revenga"
echo "mrevenga@users.sourceforge.net"
echo ""
echo ""
echo "to run this tutorial you must execute,"
echo "make punto"
echo "make gen"
echo "./src/gen"
echo "and then,"
echo "./TUTORIAL"
